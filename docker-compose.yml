version: '3.8'

## Prerequisites
##   1) Add a DOMAINNAME environment variable in /etc/environment

services:
  cloudflared:
    # More info at https://developers.cloudflare.com/1.1.1.1/dns-over-https/
    container_name: cloudflared
    build: ./build/cloudflared
    restart: unless-stopped
    networks:
      dns:
        ipv4_address: ${DOCKER_CLOUDFLARED_IP}

  #adguard:
  #  container_name: adguard
  #  build: ./build/adguard
  #  networks:
  #    dns:
  #      ipv4_address: 192.168.2.8
  #  ports:
  #    - "80:80"
  #    - "443:443"
  #    - "3000:3000"
  #    - "53:53/tcp"
  #    - "53:53/udp"
  #  volumes:
  #    - /etc/localtime:/etc/localtime:ro
  #    - /etc/timezone:/etc/timezone:ro
  #    - /etc/hosts:/etc/hosts:ro
  #    - ./config/adguard/work:/opt/adguardhome/work
  #    - ./config/adguard/conf:/opt/adguardhome/conf
  #  restart: unless-stopped

  pihole:
    # More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
    container_name: pihole
    build: ./build/pihole
    networks:
      dns:
        ipv4_address: ${DOCKER_PIHOLE_IP}
    ports:
      - "80:80"
      - "443:443"
      - "53:53/tcp"
      - "53:53/udp"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - HOSTNAME='Pi-Hole'
      - PIHOLE_DNS_=192.168.2.201;192.168.2.202;192.168.2.203
      - SKIPGRAVITYONBOOT=1
      - IPv6=false
      #- PROXY_LOCATION=${SERVER_IP}
      #- VIRTUAL_HOST=pihole.${DOMAINNAME}
      #- VIRTUAL_PORT=80
    # Volumes store your data between container upgrades
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/hosts:/etc/hosts:ro
      - ./config/pihole/etc/pihole:/etc/pihole/
      - ./config/pihole/etc/dnsmasq.d:/etc/dnsmasq.d/
    dns:
      - 127.0.0.1
      - 192.168.2.201
      - 192.168.2.202
      - 192.168.2.203
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.docker.network=web"

    #   - "traefik.http.middlewares.pihole-redirect.redirectregex.regex=^https://([^/]+)/(|admin)$$"
    #   - "traefik.http.middlewares.pihole-redirect.redirectregex.replacement=https://$${1}/admin/"
    #   - "traefik.http.middlewares.pihole-redirect.redirectregex.permanent=true"

    #   - "traefik.http.routers.pihole.entrypoints=websecure"
    #   - "traefik.http.routers.pihole.rule=Host(`pihole.${DOMAINNAME}`)"
    #   - "traefik.http.routers.pihole.tls.certResolver=tls"
    #   - "traefik.http.routers.pihole.middlewares=pihole-redirect@docker"
    #   - "traefik.http.routers.pihole.service=pihole@docker"
    #   - "traefik.http.services.pihole.loadbalancer.server.port=80"

    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    #cap_add:
    #  - NET_ADMIN
    restart: unless-stopped

  #cloudsync:
    #container_name: cloudsync
    #build: ./build/cloudsync
    #restart: unless-stopped
    #ports:
      #- 8080:1194/tcp

#  openvpn:
#    container_name: dnsvpn
#    build: ./build/openvpn
#    restart: unless-stopped
#    #ports:
#      #- 8080:1194/tcp
#    privileged: true
#    volumes:
#      - ./config/openvpn:/etc/openvpn
#    cap_add:
#      - NET_ADMIN
#    labels:
#      - "traefik.enable=true"
#      - "traefik.tcp.routers.openvpn.entrypoints=websecure"
#      - "traefik.tcp.routers.openvpn.rule=HostSNI(`portainer.${DOMAINNAME}`)"
#      - "traefik.tcp.routers.openvpn.tls.passthrough=true"
#      - "traefik.tcp.routers.openvpn.service=openvpn@docker"
#      - "traefik.tcp.services.openvpn.loadbalancer.server.port=1194"
#      - "traefik.docker.network=web"

networks:
  dns:
    external: true
